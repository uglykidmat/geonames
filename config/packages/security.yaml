security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            memory:
                users:
                    gtr: { password: '%env(CREDENTIALS_TOKEN)%', roles: ['ROLE_USER']}
                    gator: { password: '%env(CREDENTIALS_PASSWORD)%', roles: ['ROLE_AUTH']}
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            access_token:
                token_handler: App\Security\AccessTokenHandler
            http_basic:
                realm: Enter credentials
when@prod: &prod
    security:
        access_control:
            - { path: ^/status, roles: PUBLIC_ACCESS }
            - { path: ^/geonames/search, roles: ROLE_USER }
            - { path: ^/administrativedivisions/api, roles: ROLE_USER }
            - { path: ^/, roles: ROLE_AUTH }
when@dev:
    <<: *prod
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
